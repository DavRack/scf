use std::path::PathBuf;
use tree_sitter;

pub struct Language {
    pub file_extensions: Vec<&'static str>,
    pub name: &'static str,
    pub parser_name: &'static str,
    pub parser: tree_sitter::Language,

}
pub fn get_lang_for_file(file: PathBuf) -> Result<Language, &'static str> {
    let file_extension_name = match file.extension(){
        Some(file_extension) => file_extension.to_str().unwrap(),
        None => "txt",
    };
    let file_extension = format!(".{}", file_extension_name);

    let langs = get_lang_list();
    for lang in langs{
        if lang.file_extensions.contains(&file_extension.as_str()){
            return Ok(lang);
        }
    }
    Err("")
}

pub fn get_lang_list() -> Vec<Language>{
    return vec![
        Language{
            name: "bash",
            parser_name: "tree-sitter-bash",
            file_extensions: vec![".bash"],
            parser: tree_sitter_bash::language(),
        },
        Language{
            name: "beancount",
            parser_name: "tree-sitter-beancount",
            file_extensions: vec![".beancount"],
            parser: tree_sitter_beancount::language(),
        },
        Language{
            name: "capnp",
            parser_name: "tree-sitter-capnp",
            file_extensions: vec![".capnp"],
            parser: tree_sitter_capnp::language(),
        },
        Language{
            name: "c",
            parser_name: "tree-sitter-c",
            file_extensions: vec![".c"],
            parser: tree_sitter_c::language(),
        },
        Language{
            name: "cpp",
            parser_name: "tree-sitter-cpp",
            file_extensions: vec![".cpp"],
            parser: tree_sitter_cpp::language(),
        },
        Language{
            name: "sharp",
            parser_name: "tree-sitter-c-sharp",
            file_extensions: vec![".cs"],
            parser: tree_sitter_c_sharp::language(),
        },
        Language{
            name: "cmake",
            parser_name: "tree-sitter-cmake",
            file_extensions: vec![".cmake"],
            parser: tree_sitter_cmake::language(),
        },
        Language{
            name: "comment",
            parser_name: "tree-sitter-comment",
            file_extensions: vec![".*"],
            parser: tree_sitter_comment::language(),
        },
        Language{
            name: "commonlisp",
            parser_name: "tree-sitter-commonlisp",
            file_extensions: vec![".lisp", ".cl", ".asd"],
            parser: tree_sitter_commonlisp::language(),
        },
        Language{
            name: "css",
            parser_name: "tree-sitter-css",
            file_extensions: vec![".css", ".less", ".sass", ".scss"],
            parser: tree_sitter_css::language(),
        },
        Language{
            name: "cuda",
            parser_name: "tree-sitter-cuda",
            file_extensions: vec![".cu", ".cuh"],
            parser: tree_sitter_cuda::language(),
        },
        Language{
            name: "dockerfile",
            parser_name: "tree-sitter-dockerfile",
            file_extensions: vec![".dockerfile"],
            parser: tree_sitter_dockerfile::language(),
        },
        Language{
            name: "dot",
            parser_name: "tree-sitter-dot",
            file_extensions: vec![".dot"],
            parser: tree_sitter_dot::language(),
        },
        Language{
            name: "elixir",
            parser_name: "tree-sitter-elixir",
            file_extensions: vec![".ex", ".exs"],
            parser: tree_sitter_elixir::language(),
        },
        Language{
            name: "elm",
            parser_name: "tree-sitter-elm",
            file_extensions: vec![".elm"],
            parser: tree_sitter_elm::language(),
        },
        Language{
            name: "elisp",
            parser_name: "tree-sitter-elisp",
            file_extensions: vec![".el", ".emacs"],
            parser: tree_sitter_elisp::language(),
        },
        Language{
            name: "template",
            parser_name: "tree-sitter-embedded-template",
            file_extensions: vec![".ejs", ".erb", ".htm", ".html", ".mustache", ".njk"],
            parser: tree_sitter_embedded_template::language(),
        },
        Language{
            name: "erlang",
            parser_name: "tree-sitter-erlang",
            file_extensions: vec![".erl", ".hrl"],
            parser: tree_sitter_erlang::language(),
        },
        Language{
            name: "fish",
            parser_name: "tree-sitter-fish",
            file_extensions: vec![".fish"],
            parser: tree_sitter_fish::language(),
        },
        Language{
            name: "formula",
            parser_name: "tree-sitter-formula",
            file_extensions: vec![".formula"],
            parser: tree_sitter_formula::language(),
        },
        Language{
            name: "gitattributes",
            parser_name: "tree-sitter-gitattributes",
            file_extensions: vec![".gitattributes"],
            parser: tree_sitter_gitattributes::language(),
        },
        Language{
            name: "gleam",
            parser_name: "tree-sitter-gleam",
            file_extensions: vec![".gleam"],
            parser: tree_sitter_gleam::language(),
        },
        Language{
            name: "glsl",
            parser_name: "tree-sitter-glsl",
            file_extensions: vec![".glsl"],
            parser: tree_sitter_glsl::language(),
        },
        Language{
            name: "go",
            parser_name: "tree-sitter-go",
            file_extensions: vec![".go"],
            parser: tree_sitter_go::language(),
        },
        Language{
            name: "mod",
            parser_name: "tree-sitter-go-mod",
            file_extensions: vec![".mod"],
            parser: tree_sitter_go::language(),
        },
        Language{
            name: "work",
            parser_name: "tree-sitter-go-work",
            file_extensions: vec![".go"],
            parser: tree_sitter_go::language(),
        },
        Language{
            name: "hack",
            parser_name: "tree-sitter-hack",
            file_extensions: vec![".hack"],
            parser: tree_sitter_hack::language(),
        },
        Language{
            name: "haskell",
            parser_name: "tree-sitter-haskell",
            file_extensions: vec![".hs"],
            parser: tree_sitter_haskell::language(),
        },
        Language{
            name: "hcl",
            parser_name: "tree-sitter-hcl",
            file_extensions: vec![".hcl"],
            parser: tree_sitter_hcl::language(),
        },
        Language{
            name: "java",
            parser_name: "tree-sitter-java",
            file_extensions: vec![".java"],
            parser: tree_sitter_java::language(),
        },
        Language{
            name: "javascript",
            parser_name: "tree-sitter-javascript",
            file_extensions: vec![".js"],
            parser: tree_sitter_javascript::language(),
        },
        Language{
            name: "jq",
            parser_name: "tree-sitter-jq",
            file_extensions: vec![".jq"],
            parser: tree_sitter_jq::language(),
        },
        Language{
            name: "json5",
            parser_name: "tree-sitter-json5",
            file_extensions: vec![".json5"],
            parser: tree_sitter_json5::language(),
        },
        Language{
            name: "json",
            parser_name: "tree-sitter-json",
            file_extensions: vec![".json"],
            parser: tree_sitter_json::language(),
        },
        Language{
            name: "kotlin",
            parser_name: "tree-sitter-kotlin",
            file_extensions: vec![".kt"],
            parser: tree_sitter_kotlin::language(),
        },
        Language{
            name: "latex",
            parser_name: "tree-sitter-latex",
            file_extensions: vec![".tex"],
            parser: tree_sitter_latex::language(),
        },
        Language{
            name: "llvm",
            parser_name: "tree-sitter-llvm",
            file_extensions: vec![".ll"],
            parser: tree_sitter_llvm::language(),
        },
        Language{
            name: "tablegen",
            parser_name: "tree-sitter-tablegen",
            file_extensions: vec![".td"],
            parser: tree_sitter_tablegen::language(),
        },
        Language{
            name: "lua",
            parser_name: "tree-sitter-lua",
            file_extensions: vec![".lua"],
            parser: tree_sitter_lua::language(),
        },
        Language{
            name: "make",
            parser_name: "tree-sitter-make",
            file_extensions: vec![".mk"],
            parser: tree_sitter_make::language(),
        },
        Language{
            name: "meson",
            parser_name: "tree-sitter-meson",
            file_extensions: vec![".meson"],
            parser: tree_sitter_meson::language(),
        },
        Language{
            name: "m68k",
            parser_name: "tree-sitter-m68k",
            file_extensions: vec![".m68k"],
            parser: tree_sitter_m68k::language(),
        },
        Language{
            name: "nix",
            parser_name: "tree-sitter-nix",
            file_extensions: vec![".nix"],
            parser: tree_sitter_nix::language(),
        },
        Language{
            name: "objc",
            parser_name: "tree-sitter-objc",
            file_extensions: vec![".m"],
            parser: tree_sitter_objc::language(),
        },
        Language{
            name: "ocaml",
            parser_name: "tree-sitter-ocaml",
            file_extensions: vec![".ml"],
            parser: tree_sitter_ocaml::language_ocaml(),
        },
        Language{
            name: "ocaml",
            parser_name: "tree-sitter-ocaml",
            file_extensions: vec![".mli"],
            parser: tree_sitter_ocaml::language_ocaml_interface(),
        },
        Language{
            name: "org",
            parser_name: "tree-sitter-org",
            file_extensions: vec![".org"],
            parser: tree_sitter_org::language(),
        },
        Language{
            name: "php",
            parser_name: "tree-sitter-php",
            file_extensions: vec![".php"],
            parser: tree_sitter_php::language(),
        },
        Language{
            name: "python",
            parser_name: "tree-sitter-python",
            file_extensions: vec![".py"],
            parser: tree_sitter_python::language(),
        },
        Language{
            name: "racket",
            parser_name: "tree-sitter-racket",
            file_extensions: vec![".rkt"],
            parser: tree_sitter_racket::language(),
        },
        Language{
            name: "rasi",
            parser_name: "tree-sitter-rasi",
            file_extensions: vec![".rasi"],
            parser: tree_sitter_rasi::language(),
        },
        Language{
            name: "re2c",
            parser_name: "tree-sitter-re2c",
            file_extensions: vec![".re"],
            parser: tree_sitter_re2c::language(),
        },
        Language{
            name: "regex",
            parser_name: "tree-sitter-regex",
            file_extensions: vec![".regex"],
            parser: tree_sitter_regex::language(),
        },
        Language{
            name: "ruby",
            parser_name: "tree-sitter-ruby",
            file_extensions: vec![".rb"],
            parser: tree_sitter_ruby::language(),
        },
        Language{
            name: "rust",
            parser_name: "tree-sitter-rust",
            file_extensions: vec![".rs"],
            parser: tree_sitter_rust::language(),
        },
        Language{
            name: "scala",
            parser_name: "tree-sitter-scala",
            file_extensions: vec![".scala"],
            parser: tree_sitter_scala::language(),
        },
        Language{
            name: "scheme",
            parser_name: "tree-sitter-scheme",
            file_extensions: vec![".scm", ".scheme"],
            parser: tree_sitter_scheme::language(),
        },
        Language{
            name: "scss",
            parser_name: "tree-sitter-scss",
            file_extensions: vec![".scss"],
            parser: tree_sitter_scss::language(),
        },
        Language{
            name: "smali",
            parser_name: "tree-sitter-smali",
            file_extensions: vec![".smali"],
            parser: tree_sitter_smali::language(),
        },
        Language{
            name: "sourcepawn",
            parser_name: "tree-sitter-sourcepawn",
            file_extensions: vec![".sp"],
            parser: tree_sitter_sourcepawn::language(),
        },
        Language{
            name: "bigquery",
            parser_name: "tree-sitter-sql-bigquery",
            file_extensions: vec![".sql"],
            parser: tree_sitter_sql::language(),
        },
        Language{
            name: "sql",
            parser_name: "tree-sitter-sql",
            file_extensions: vec![".sql"],
            parser: tree_sitter_sql::language(),
        },
        Language{
            name: "sqlite",
            parser_name: "tree-sitter-sqlite",
            file_extensions: vec![".sqlite"],
            parser: tree_sitter_sqlite::language(),
        },
        Language{
            name: "config",
            parser_name: "tree-sitter-ssh-client-config",
            file_extensions: vec![".config"],
            parser: tree_sitter_ssh_client_config::language(),
        },
        Language{
            name: "svelte",
            parser_name: "tree-sitter-svelte",
            file_extensions: vec![".svelte"],
            parser: tree_sitter_svelte::language(),
        },
        Language{
            name: "thrift",
            parser_name: "tree-sitter-thrift",
            file_extensions: vec![".thrift"],
            parser: tree_sitter_thrift::language(),
        },
        Language{
            name: "query",
            parser_name: "tree-sitter-query",
            file_extensions: vec![".query"],
            parser: tree_sitter_query::language(),
        },
        Language{
            name: "twig",
            parser_name: "tree-sitter-twig",
            file_extensions: vec![".twig"],
            parser: tree_sitter_twig::language(),
        },
        Language{
            name: "typescript",
            parser_name: "tree-sitter-typescript",
            file_extensions: vec![".ts"],
            parser: tree_sitter_typescript::language_typescript(),
        },
        Language{
            name: "typescript",
            parser_name: "tree-sitter-typescript",
            file_extensions: vec![".tsx"],
            parser: tree_sitter_typescript::language_tsx(),
        },
        Language{
            name: "verilog",
            parser_name: "tree-sitter-verilog",
            file_extensions: vec![".v", ".vh"],
            parser: tree_sitter_verilog::language(),
        },
        Language{
            name: "vhdl",
            parser_name: "tree-sitter-vhdl",
            file_extensions: vec![".vhdl"],
            parser: tree_sitter_vhdl::language(),
        },
        Language{
            name: "wgsl",
            parser_name: "tree-sitter-wgsl",
            file_extensions: vec![".wgsl"],
            parser: tree_sitter_wgsl::language(),
        },
        Language{
            name: "yang",
            parser_name: "tree-sitter-yang",
            file_extensions: vec![".yang"],
            parser: tree_sitter_yang::language(),
        },
        Language{
            name: "zig",
            parser_name: "tree-sitter-zig",
            file_extensions: vec![".zig"],
            parser: tree_sitter_zig::language(),
        },
        // Language{
        //     parser_url: "https://github.com/briot/tree-sitter-ada",
        //     name: "ada",
        //     label: "ada",
        //     parser_name: "tree-sitter-ada",
        //     file_extensions: vec![".ada"],
        //     parser: tree_sitter_ada,
        // },
        // Language{
        //     parser_url: "https://github.com/tree-sitter/tree-sitter-agda",
        //     name: "agda",
        //     label: "agda",
        //     parser_name: "tree-sitter-agda",
        //     file_extensions: vec![".agda"],
        //     parser: tree_sitter_agda::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/aheber/tree-sitter-sfapex",
        //     name: "sfapex",
        //     label: "sfapex",
        //     parser_name: "tree-sitter-sfapex",
        //     file_extensions: vec![".sfapex"],
        //     parser: tree_sitter_sfapex::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/ikatyang/tree-sitter-yaml",
        //     name: "yaml",
        //     label: "yaml",
        //     parser_name: "tree-sitter-yaml",
        //     file_extensions: vec![".yaml"],
        //     parser: tree_sitter_yaml::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/ikatyang/tree-sitter-vue",
        //     name: "vue",
        //     label: "vue",
        //     parser_name: "tree-sitter-vue",
        //     file_extensions: vec![".vue"],
        //     parser: tree_sitter_vue::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/wasm-lsp/tree-sitter-wasm",
        //     name: "wasm",
        //     label: "wasm",
        //     parser_name: "tree-sitter-wasm",
        //     file_extensions: vec![".wasm"]
        // },
        // Language{
        //     parser_url: "https://github.com/alex-pinkus/tree-sitter-swift",
        //     name: "swift",
        //     label: "swift",
        //     parser_name: "tree-sitter-swift",
        //     file_extensions: vec![".swift"],
        //     parser: tree_sitter_swift::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/SystemRDL/tree-sitter-systemrdl",
        //     name: "systemrdl",
        //     label: "systemrdl",
        //     parser_name: "tree-sitter-systemrdl",
        //     file_extensions: vec![".rdl"],
        //     parser: tree_sitter_systemrdl::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/BonaBeavis/tree-sitter-turtle",
        //     name: "turtle",
        //     label: "turtle",
        //     parser_name: "tree-sitter-turtle",
        //     file_extensions: vec![".ttl"],
        //     parser: tree_sitter_turtle::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/ikatyang/tree-sitter-toml",
        //     name: "toml",
        //     label: "toml",
        //     parser_name: "tree-sitter-toml",
        //     file_extensions: vec![".toml"],
        //     parser: tree_sitter_toml::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/BonaBeavis/tree-sitter-sparql",
        //     name: "sparql",
        //     label: "sparql",
        //     parser_name: "tree-sitter-sparql",
        //     file_extensions: vec![".sparql"],
        //     parser: tree_sitter_sparql::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/Isopod/tree-sitter-pascal",
        //     name: "pascal",
        //     label: "pascal",
        //     parser_name: "tree-sitter-pascal",
        //     file_extensions: vec![".pas"],
        //     parser: tree_sitter_pascal::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/ganezdragon/tree-sitter-perl",
        //     name: "perl",
        //     label: "perl",
        //     parser_name: "tree-sitter-perl",
        //     file_extensions: vec![".pl"],
        //     parser: tree_sitter_perl::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/tree-sitter-perl/tree-sitter-pod",
        //     name: "pod",
        //     label: "pod",
        //     parser_name: "tree-sitter-pod",
        //     file_extensions: vec![".pod"],
        //     parser: tree_sitter_pod::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/FallenAngel97/tree-sitter-rego",
        //     name: "rego",
        //     label: "rego",
        //     parser_name: "tree-sitter-rego",
        //     file_extensions: vec![".rego"],
        //     parser: tree_sitter_rego::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/stsewd/tree-sitter-rst",
        //     name: "rst",
        //     label: "rst",
        //     parser_name: "tree-sitter-rst",
        //     file_extensions: vec![".rst"],
        //     parser: tree_sitter_rst::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/r-lib/tree-sitter-r",
        //     name: "r",
        //     label: "r",
        //     parser_name:"tree-sitter-r",
        //     file_extensions: vec![".r"],
        //     parser: tree_sitter_r::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/AbstractMachinesLab/tree-sitter-sexp",
        //     name: "sexp",
        //     label: "sexp",
        //     parser_name: "tree-sitter-sexp",
        //     file_extensions: vec![".sexp"],
        //     parser: tree_sitter_sexp::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/sogaiu/tree-sitter-clojure",
        //     name: "clojure",
        //     label: "clojure",
        //     parser_name: "tree-sitter-clojure",
        //     file_extensions: vec![".clj"],
        //     parser: tree_sitter_clojure::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/rolandwalker/tree-sitter-pgn",
        //     name: "pgn",
        //     label: "pgn",
        //     parser_name: "tree-sitter-pgn",
        //     file_extensions: vec![".pgn"],
        //     parser: tree_sitter_pgn::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/PowerShell/tree-sitter-PowerShell",
        //     name: "PowerShell",
        //     label: "PowerShell",
        //     parser_name: "tree-sitter-PowerShell",
        //     file_extensions: vec![".ps1"],
        //     parser: tree_sitter_power_shell::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/mitchellh/tree-sitter-proto",
        //     name: "proto",
        //     label: "proto",
        //     parser_name: "tree-sitter-proto",
        //     file_extensions: vec![".proto"],
        //     parser: tree_sitter_proto::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/UserNobody14/tree-sitter-dart",
        //     name: "dart",
        //     label: "dart",
        //     parser_name: "tree-sitter-dart",
        //     file_extensions: vec![".dart"],
        //     parser: tree_sitter_dart::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/gdamore/tree-sitter-d",
        //     name: "d",
        //     label: "d",
        //     parser_name: "tree-sitter-d",
        //     file_extensions: vec![".d"],
        //     parser: tree_sitter_d::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/yuja/tree-sitter-qmljs",
        //     name: "qmljs",
        //     label: "qmljs",
        //     parser_name: "tree-sitter-qmljs",
        //     file_extensions: vec![".qml", ".js"],
        //     parser: tree_sitter_qmljs::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/eno-lang/tree-sitter-eno",
        //     name: "eno",
        //     label: "eno",
        //     parser_name: "tree-sitter-eno",
        //     file_extensions: vec![".eno"],
        //     parser: tree_sitter_eno::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/travonted/tree-sitter-fennel",
        //     name: "fennel",
        //     label: "fennel",
        //     parser_name: "tree-sitter-fennel",
        //     file_extensions: vec![".fnl"],
        //     parser: tree_sitter_fennel::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/stadelmanma/tree-sitter-fortran",
        //     name: "fortran",
        //     label: "fortran",
        //     parser_name: "tree-sitter-fortran",
        //     file_extensions: vec![".f90", ".f03", ".f08"],
        //     parser: tree_sitter_fortran::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/shunsambongi/tree-sitter-gitignore",
        //     name: "gitignore",
        //     label: "gitignore",
        //     parser_name: "tree-sitter-gitignore",
        //     file_extensions: vec![".gitignore"],
        //     parser: tree_sitter_gitignore::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/bkegley/tree-sitter-graphql",
        //     name: "graphql",
        //     label: "graphql",
        //     parser_name: "tree-sitter-graphql",
        //     file_extensions: vec![".graphql"],
        //     parser: tree_sitter_graphql::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/tree-sitter/tree-sitter-html",
        //     name: "html",
        //     label: "html",
        //     parser_name: "tree-sitter-html",
        //     file_extensions: vec![".html"],
        //     parser: tree_sitter_html::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/tree-sitter/tree-sitter-julia",
        //     name: "julia",
        //     label: "julia",
        //     parser_name: "tree-sitter-julia",
        //     file_extensions: vec![".jl"],
        //     parser: tree_sitter_julia::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/MDeiml/tree-sitter-markdown",
        //     name: "markdown",
        //     label: "markdown",
        //     parser_name: "tree-sitter-markdown",
        //     file_extensions: vec![".md"],
        //     parser: tree_sitter_markdown::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/traxys/tree-sitter-lalrpop",
        //     name: "lalrpop",
        //     label: "lalrpop",
        //     parser_name: "tree-sitter-lalrpop",
        //     file_extensions: vec![".rs"],
        //     parser: tree_sitter_LALRPOP::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/Flakebi/tree-sitter-llvm-mir",
        //     name: "mir",
        //     label: "mir",
        //     parser_name: "tree-sitter-llvm-mir",
        //     file_extensions: vec![".mir"],
        //     parser: tree_sitter_llvm_mir::language(),
        // },
        // Language{
        //     parser_url: "https://github.com/Julian/tree-sitter-lean",
        //     name: "lean",
        //     label: "lean",
        //     parser_name: "tree-sitter-lean",
        //     file_extensions: vec![".lean"],
        //     parser: tree_sitter_lean::language(),
        // },
];
}
